# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.results_per_csi_rs_index_list import ResultsPerCsiRsIndexList  # noqa: F401,E501
from swagger_server.models.results_per_ssb_index_list import ResultsPerSsbIndexList  # noqa: F401,E501
from swagger_server import util


class RsIndexResults(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, results_csi_rs_indexes: ResultsPerCsiRsIndexList=None, results_ssb_indexes: ResultsPerSsbIndexList=None):  # noqa: E501
        """RsIndexResults - a model defined in Swagger

        :param results_csi_rs_indexes: The results_csi_rs_indexes of this RsIndexResults.  # noqa: E501
        :type results_csi_rs_indexes: ResultsPerCsiRsIndexList
        :param results_ssb_indexes: The results_ssb_indexes of this RsIndexResults.  # noqa: E501
        :type results_ssb_indexes: ResultsPerSsbIndexList
        """
        self.swagger_types = {
            'results_csi_rs_indexes': ResultsPerCsiRsIndexList,
            'results_ssb_indexes': ResultsPerSsbIndexList
        }

        self.attribute_map = {
            'results_csi_rs_indexes': 'resultsCsiRsIndexes',
            'results_ssb_indexes': 'resultsSsbIndexes'
        }
        self._results_csi_rs_indexes = results_csi_rs_indexes
        self._results_ssb_indexes = results_ssb_indexes

    @classmethod
    def from_dict(cls, dikt) -> 'RsIndexResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RsIndexResults of this RsIndexResults.  # noqa: E501
        :rtype: RsIndexResults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def results_csi_rs_indexes(self) -> ResultsPerCsiRsIndexList:
        """Gets the results_csi_rs_indexes of this RsIndexResults.


        :return: The results_csi_rs_indexes of this RsIndexResults.
        :rtype: ResultsPerCsiRsIndexList
        """
        return self._results_csi_rs_indexes

    @results_csi_rs_indexes.setter
    def results_csi_rs_indexes(self, results_csi_rs_indexes: ResultsPerCsiRsIndexList):
        """Sets the results_csi_rs_indexes of this RsIndexResults.


        :param results_csi_rs_indexes: The results_csi_rs_indexes of this RsIndexResults.
        :type results_csi_rs_indexes: ResultsPerCsiRsIndexList
        """
        if results_csi_rs_indexes is None:
            raise ValueError("Invalid value for `results_csi_rs_indexes`, must not be `None`")  # noqa: E501

        self._results_csi_rs_indexes = results_csi_rs_indexes

    @property
    def results_ssb_indexes(self) -> ResultsPerSsbIndexList:
        """Gets the results_ssb_indexes of this RsIndexResults.


        :return: The results_ssb_indexes of this RsIndexResults.
        :rtype: ResultsPerSsbIndexList
        """
        return self._results_ssb_indexes

    @results_ssb_indexes.setter
    def results_ssb_indexes(self, results_ssb_indexes: ResultsPerSsbIndexList):
        """Sets the results_ssb_indexes of this RsIndexResults.


        :param results_ssb_indexes: The results_ssb_indexes of this RsIndexResults.
        :type results_ssb_indexes: ResultsPerSsbIndexList
        """
        if results_ssb_indexes is None:
            raise ValueError("Invalid value for `results_ssb_indexes`, must not be `None`")  # noqa: E501

        self._results_ssb_indexes = results_ssb_indexes
