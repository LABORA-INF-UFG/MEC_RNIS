# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ErabReleaseInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, erab_id: int=None):  # noqa: E501
        """ErabReleaseInfo - a model defined in Swagger

        :param erab_id: The erab_id of this ErabReleaseInfo.  # noqa: E501
        :type erab_id: int
        """
        self.swagger_types = {
            'erab_id': int
        }

        self.attribute_map = {
            'erab_id': 'erabId'
        }
        self._erab_id = erab_id

    @classmethod
    def from_dict(cls, dikt) -> 'ErabReleaseInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErabReleaseInfo of this ErabReleaseInfo.  # noqa: E501
        :rtype: ErabReleaseInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def erab_id(self) -> int:
        """Gets the erab_id of this ErabReleaseInfo.

        The attribute that uniquely identifies a Radio Access bearer for specific UE as defined in ETSI TS 136 413 [i.3].  # noqa: E501

        :return: The erab_id of this ErabReleaseInfo.
        :rtype: int
        """
        return self._erab_id

    @erab_id.setter
    def erab_id(self, erab_id: int):
        """Sets the erab_id of this ErabReleaseInfo.

        The attribute that uniquely identifies a Radio Access bearer for specific UE as defined in ETSI TS 136 413 [i.3].  # noqa: E501

        :param erab_id: The erab_id of this ErabReleaseInfo.
        :type erab_id: int
        """
        if erab_id is None:
            raise ValueError("Invalid value for `erab_id`, must not be `None`")  # noqa: E501

        self._erab_id = erab_id
