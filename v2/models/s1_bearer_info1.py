# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.enb_info import EnbInfo  # noqa: F401,E501
from swagger_server.models.sgw_info import SGwInfo  # noqa: F401,E501
from swagger_server import util


class S1BearerInfo1(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, enb_info: EnbInfo=None, erab_id: int=None, s_gw_info: SGwInfo=None):  # noqa: E501
        """S1BearerInfo1 - a model defined in Swagger

        :param enb_info: The enb_info of this S1BearerInfo1.  # noqa: E501
        :type enb_info: EnbInfo
        :param erab_id: The erab_id of this S1BearerInfo1.  # noqa: E501
        :type erab_id: int
        :param s_gw_info: The s_gw_info of this S1BearerInfo1.  # noqa: E501
        :type s_gw_info: SGwInfo
        """
        self.swagger_types = {
            'enb_info': EnbInfo,
            'erab_id': int,
            's_gw_info': SGwInfo
        }

        self.attribute_map = {
            'enb_info': 'enbInfo',
            'erab_id': 'erabId',
            's_gw_info': 'sGwInfo'
        }
        self._enb_info = enb_info
        self._erab_id = erab_id
        self._s_gw_info = s_gw_info

    @classmethod
    def from_dict(cls, dikt) -> 'S1BearerInfo1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The S1BearerInfo1 of this S1BearerInfo1.  # noqa: E501
        :rtype: S1BearerInfo1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enb_info(self) -> EnbInfo:
        """Gets the enb_info of this S1BearerInfo1.


        :return: The enb_info of this S1BearerInfo1.
        :rtype: EnbInfo
        """
        return self._enb_info

    @enb_info.setter
    def enb_info(self, enb_info: EnbInfo):
        """Sets the enb_info of this S1BearerInfo1.


        :param enb_info: The enb_info of this S1BearerInfo1.
        :type enb_info: EnbInfo
        """
        if enb_info is None:
            raise ValueError("Invalid value for `enb_info`, must not be `None`")  # noqa: E501

        self._enb_info = enb_info

    @property
    def erab_id(self) -> int:
        """Gets the erab_id of this S1BearerInfo1.

        The attribute that uniquely identifies a S1 bearer for a specific UE, as defined in ETSI TS 136 413 [i.3].  # noqa: E501

        :return: The erab_id of this S1BearerInfo1.
        :rtype: int
        """
        return self._erab_id

    @erab_id.setter
    def erab_id(self, erab_id: int):
        """Sets the erab_id of this S1BearerInfo1.

        The attribute that uniquely identifies a S1 bearer for a specific UE, as defined in ETSI TS 136 413 [i.3].  # noqa: E501

        :param erab_id: The erab_id of this S1BearerInfo1.
        :type erab_id: int
        """
        if erab_id is None:
            raise ValueError("Invalid value for `erab_id`, must not be `None`")  # noqa: E501

        self._erab_id = erab_id

    @property
    def s_gw_info(self) -> SGwInfo:
        """Gets the s_gw_info of this S1BearerInfo1.


        :return: The s_gw_info of this S1BearerInfo1.
        :rtype: SGwInfo
        """
        return self._s_gw_info

    @s_gw_info.setter
    def s_gw_info(self, s_gw_info: SGwInfo):
        """Sets the s_gw_info of this S1BearerInfo1.


        :param s_gw_info: The s_gw_info of this S1BearerInfo1.
        :type s_gw_info: SGwInfo
        """
        if s_gw_info is None:
            raise ValueError("Invalid value for `s_gw_info`, must not be `None`")  # noqa: E501

        self._s_gw_info = s_gw_info
